'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _toast = require('./../mixins/toast.js');

var _toast2 = _interopRequireDefault(_toast);

var _api = require('./../mixins/api.js');

var _api2 = _interopRequireDefault(_api);

var _util = require('./../mixins/util.js');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Subscription = function (_wepy$page) {
  _inherits(Subscription, _wepy$page);

  function Subscription() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Subscription);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
      navigationBarTitleText: '收订金',
      navigationBarBackgroundColor: '#FF5D22',
      navigationBarTextStyle: 'white'
    }, _this.mixins = [_toast2.default, _api2.default, _util2.default], _this.data = {
      searchlist: {},
      list: [],
      title: '负责项目',
      flag: false,
      page: 1,
      height: 0,
      fixedIndex: false
    }, _this.methods = {
      keepOutIndex: function keepOutIndex() {
        this.$redirect({
          url: './index'
        });
      },

      // 实时查询
      bindPassword: function bindPassword(e) {
        var _this2 = this;

        console.log(e.detail.value);
        var value = e.detail.value;
        var id = _wepy2.default.getStorageSync('activity_project_id') || '-1';
        if (value && value.length === 11) {
          this.getMember(value, id).then(function (res) {
            if (res.data.resultCode === 1000) {
              console.log(res.data.resultCode);
              _this2.searchlist = res.data.data;
              _this2.flag = true;
              _this2.$apply();
            } else {
              _this2.selfToast(String(res.data.error), 'none');
              _this2.flag = false;
              _this2.$apply();
            }
          });
        } else {
          this.flag = false;
          this.$apply();
        }
      },
      giveSubscription: function giveSubscription(userId) {
        var that = this;
        var projectId = _wepy2.default.getStorageSync('activity_project_id') || '-1';
        that.getSub(userId, projectId).then(function (res) {
          if (res.data.resultCode === 1001) {
            that.selfToast(res.data.error, 'none');
            return false;
          } else {
            that.$navigate('./EditSub', { 'userId': userId, 'projectId': projectId });
          }
        });
      },
      loadMore: function loadMore() {
        var _this3 = this;

        if (this.flag) {
          wx.showToast({
            title: '没有更多了',
            duration: 1000
          });
          return false;
        }
        var page = this.page;
        page += 1;
        var id = _wepy2.default.getStorageSync('activity_project_id') || '-1';
        this.getSubList(id, page).then(function (res) {
          console.log('this', _this3);
          if (res.data.data.length > 0) {
            var tempData = res.data.data;
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
              for (var _iterator = tempData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var o = _step.value;

                o.status = _this3.changState(o.status);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }

            _this3.list = tempData;
            _this3.page = page;
          } else {
            _this3.flag = true;
            wx.showToast({
              title: '没有更多了'
            });
          }
          _this3.$apply();
        });
      },


      // 扫码
      scanCode: function scanCode() {
        var that = this;
        wx.scanCode({
          success: function success(res) {
            console.log(res);
            var result = res.result;

            that.scanSubscrip({ usercode: result }).then(function (res) {
              console.log('scanres', res);
              var id = res.data.data.id;
              that.SearchSubscription(id);
            });
          }
        });
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Subscription, [{
    key: 'SearchSubscription',
    value: function SearchSubscription(e) {
      var _this4 = this;

      var id = e;
      var that = this;
      if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {
        id = e.currentTarget.dataset.id;
      }
      var projectId = _wepy2.default.getStorageSync('activity_project_id') || '-1';
      that.getSub(id, projectId).then(function (res) {
        if (res.data.resultCode === 1001) {
          that.selfToast(res.data.error, 'none');
          return false;
        } else {
          _this4.$navigate('./EditSub', { 'userId': id, 'projectId': projectId });
        }
      });
    }
  }, {
    key: 'changState',
    value: function changState(state, type) {
      var txt = '';
      switch (state) {
        case -3:
          txt = '退款中';
          break;
        case -2:
          txt = '已退单';
          break;
        case -1:
          txt = '取消';
          break;
        case 0:
          txt = '待支付';
          if (type) {
            txt = '申请中';
          }
          break;
        case 1:
          txt = '待转单';
          if (type) {
            txt = '已退单';
          }
          break;
        case 2:
          txt = '已转单';
          if (type) {
            txt = '已取消';
          }
          break;
        default:
          {
            txt = '部分退款中';
          }
      }
      return txt;
    }
  }, {
    key: 'onLoad',
    value: function onLoad(options) {
      var _this5 = this;

      console.log(options, "paypaypay");
      if (options.pay == "pay") {
        this.fixedIndex = true;
      }

      // 查询签到用户
      var id = _wepy2.default.getStorageSync('activity_project_id') || '-1';
      var h = wx.getSystemInfoSync().windowHeight;
      var params = '';
      if (options.data) {
        params = JSON.parse(options.data);
      }
      this.title = options.projectName;

      console.log('params', params);
      // this.signList(id).then(res => {
      //   console.log(res)
      //   this.list = res.data.data
      //   console.log(res.data.data.length)
      //   if (res.data.data.length === 0) {
      //     this.title = '该项目暂无人员签到'
      //   } else {
      //     this.title = '该项目今日已签到用户'
      //   }
      //   this.height = h
      //   this.$apply()
      // })
      this.getSubList(id).then(function (res) {
        console.log('list', res.data.data);
        if (res.data.data) {
          var tempData = res.data.data;
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = tempData[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var o = _step2.value;

              o.status = _this5.changState(o.status);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }

          _this5.list = tempData;
          _this5.height = h;
          _this5.$apply();
        } else {
          _this5.selfToast('暂无数据,请重试', 'none', 2000);
          _this5.hideToast();
          _this5.height = h;
          _this5.$apply();
        }
      });
    }
  }, {
    key: 'onShow',
    value: function onShow() {
      this.flag = false;
    }
  }]);

  return Subscription;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(Subscription , 'pages/subscription'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,