'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _toast = require('./../mixins/toast.js');

var _toast2 = _interopRequireDefault(_toast);

var _api = require('./../mixins/api.js');

var _api2 = _interopRequireDefault(_api);

var _util = require('./../mixins/util.js');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditSub = function (_wepy$page) {
  _inherits(EditSub, _wepy$page);

  function EditSub() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, EditSub);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditSub.__proto__ || Object.getPrototypeOf(EditSub)).call.apply(_ref, [this].concat(args))), _this), _this.config = {
      navigationBarTitleText: '填写订金单',
      navigationBarBackgroundColor: '#FF5D22',
      navigationBarTextStyle: 'white'
    }, _this.mixins = [_toast2.default, _api2.default, _util2.default], _this.data = {
      list: {},
      user: {},
      userId: '',
      projectId: '',
      chooseAddressBack: null,
      chooseLinkBack: null
    }, _this.methods = {
      commit: function commit(userId, receiveId, linkId, projectId) {
        var that = this;
        var id = _wepy2.default.getStorageSync('activity_project_id');
        that.commitSub(userId, receiveId, linkId, id).then(function (res) {
          if (res.data.resultCode === 1000) {
            that.$navigate('./pay', { id: res.data.data, price: that.list.projectinfo.so_price });
          } else {
            that.selfToast(res.data.error, 'none');
          }
        });
      },


      // 修改联系人
      editTel: function editTel(id) {
        this.$navigate('./contactList', { 'user_id': id });
      },

      // 去选择联系人
      toAddress: function toAddress(id) {
        this.$navigate('./address', { 'user_id': id });
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(EditSub, [{
    key: 'onLoad',
    value: function onLoad(option) {
      var that = this;
      that.userId = option.userId;
      that.projectId = option.projectId;
    }
  }, {
    key: 'onShow',
    value: function onShow() {
      var that = this;
      var userId = that.userId;
      var projectId = that.projectId;
      var pages = getCurrentPages();
      var currPage = pages[pages.length - 1];
      console.log('curr', currPage);
      that.getSub(userId, projectId).then(function (res) {
        console.log(res);
        res.data.data.userlinklist.forEach(function (e) {
          if (e.is_default === 1) {
            that.user = e;
          }
        });
        if (currPage.data.chooseAddressBack) {
          res.data.data.userreceivelist[0].village_name = currPage.data.chooseAddressBack.address_detail;
          res.data.data.userreceivelist[0].door_number = currPage.data.chooseAddressBack.door_number;
        }
        if (currPage.data.chooseLinkBack) {
          console.log('c', currPage.data.chooseLinkBack);
          that.user = currPage.data.chooseLinkBack;
        }
        that.list = res.data.data;
        that.$apply();
      });
    }
  }]);

  return EditSub;
}(_wepy2.default.page);


Page(require('./../npm/wepy/lib/wepy.js').default.$createPage(EditSub , 'pages/EditSub'));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVkaXRTdWIuanMiXSwibmFtZXMiOlsiRWRpdFN1YiIsImNvbmZpZyIsIm5hdmlnYXRpb25CYXJUaXRsZVRleHQiLCJuYXZpZ2F0aW9uQmFyQmFja2dyb3VuZENvbG9yIiwibmF2aWdhdGlvbkJhclRleHRTdHlsZSIsIm1peGlucyIsInRvYXN0TWl4aW4iLCJhcGkiLCJ1dGlsIiwiZGF0YSIsImxpc3QiLCJ1c2VyIiwidXNlcklkIiwicHJvamVjdElkIiwiY2hvb3NlQWRkcmVzc0JhY2siLCJjaG9vc2VMaW5rQmFjayIsIm1ldGhvZHMiLCJjb21taXQiLCJyZWNlaXZlSWQiLCJsaW5rSWQiLCJ0aGF0IiwiaWQiLCJ3ZXB5IiwiZ2V0U3RvcmFnZVN5bmMiLCJjb21taXRTdWIiLCJ0aGVuIiwicmVzIiwicmVzdWx0Q29kZSIsIiRuYXZpZ2F0ZSIsInByaWNlIiwicHJvamVjdGluZm8iLCJzb19wcmljZSIsInNlbGZUb2FzdCIsImVycm9yIiwiZWRpdFRlbCIsInRvQWRkcmVzcyIsIm9wdGlvbiIsInBhZ2VzIiwiZ2V0Q3VycmVudFBhZ2VzIiwiY3VyclBhZ2UiLCJsZW5ndGgiLCJjb25zb2xlIiwibG9nIiwiZ2V0U3ViIiwidXNlcmxpbmtsaXN0IiwiZm9yRWFjaCIsImUiLCJpc19kZWZhdWx0IiwidXNlcnJlY2VpdmVsaXN0IiwidmlsbGFnZV9uYW1lIiwiYWRkcmVzc19kZXRhaWwiLCJkb29yX251bWJlciIsIiRhcHBseSIsInBhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNFOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFFcUJBLE87Ozs7Ozs7Ozs7Ozs7O3dMQUNuQkMsTSxHQUFTO0FBQ1BDLDhCQUF3QixPQURqQjtBQUVQQyxvQ0FBOEIsU0FGdkI7QUFHUEMsOEJBQXdCO0FBSGpCLEssUUFNVEMsTSxHQUFTLENBQUNDLGVBQUQsRUFBYUMsYUFBYixFQUFrQkMsY0FBbEIsQyxRQUVUQyxJLEdBQU87QUFDTEMsWUFBTSxFQURE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QWNNLGNBQTFCO0FBQ0Q7QUFDREssYUFBS1YsSUFBTCxHQUFZZ0IsSUFBSWpCLElBQUosQ0FBU0EsSUFBckI7QUFDQVcsYUFBS2dDLE1BQUw7QUFDRCxPQWpCRDtBQWtCRDs7OztFQWpEa0M5QixlQUFLK0IsSTs7a0JBQXJCckQsTyIsImZpbGUiOiJFZGl0U3ViLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIGltcG9ydCB3ZXB5IGZyb20gJ3dlcHknXG4gIGltcG9ydCB0b2FzdE1peGluIGZyb20gJy4uL21peGlucy90b2FzdCdcbiAgaW1wb3J0IGFwaSBmcm9tICcuLi9taXhpbnMvYXBpJ1xuICBpbXBvcnQgdXRpbCBmcm9tICcuLi9taXhpbnMvdXRpbCdcblxuICBleHBvcnQgZGVmYXVsdCBjbGFzcyBFZGl0U3ViIGV4dGVuZHMgd2VweS5wYWdlIHtcbiAgICBjb25maWcgPSB7XG4gICAgICBuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0OiAn5aGr5YaZ6K6i6YeR5Y2VJyxcbiAgICAgIG5hdmlnYXRpb25CYXJCYWNrZ3JvdW5kQ29sb3I6ICcjRkY1RDIyJyxcbiAgICAgIG5hdmlnYXRpb25CYXJUZXh0U3R5bGU6ICd3aGl0ZSdcbiAgICB9XG5cbiAgICBtaXhpbnMgPSBbdG9hc3RNaXhpbiwgYXBpLCB1dGlsXVxuXG4gICAgZGF0YSA9IHtcbiAgICAgIGxpc3Q6IHt9LFxuICAgICAgdXNlcjoge30sXG4gICAgICB1c2VySWQ6ICcnLFxuICAgICAgcHJvamVjdElkOiAnJyxcbiAgICAgIGNob29zZUFkZHJlc3NCYWNrOiBudWxsLFxuICAgICAgY2hvb3NlTGlua0JhY2s6IG51bGxcbiAgICB9XG5cbiAgICBvbkxvYWQob3B0aW9uKSB7XG4gICAgICBsZXQgdGhhdCA9IHRoaXNcbiAgICAgIHRoYXQudXNlcklkID0gb3B0aW9uLnVzZXJJZFxuICAgICAgdGhhdC5wcm9qZWN0SWQgPSBvcHRpb24ucHJvamVjdElkXG4gICAgfVxuXG4gICAgb25TaG93KCkge1xuICAgICAgbGV0IHRoYXQgPSB0aGlzXG4gICAgICBsZXQgdXNlcklkID0gdGhhdC51c2VySWRcbiAgICAgIGxldCBwcm9qZWN0SWQgPSB0aGF0LnByb2plY3RJZFxuICAgICAgbGV0IHBhZ2VzID0gZ2V0Q3VycmVudFBhZ2VzKClcbiAgICAgIGxldCBjdXJyUGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDFdXG4gICAgICBjb25zb2xlLmxvZygnY3VycicsIGN1cnJQYWdlKVxuICAgICAgdGhhdC5nZXRTdWIodXNlcklkLCBwcm9qZWN0SWQpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzKVxuICAgICAgICByZXMuZGF0YS5kYXRhLnVzZXJsaW5rbGlzdC5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgIGlmIChlLmlzX2RlZmF1bHQgPT09IDEpIHtcbiAgICAgICAgICAgIHRoYXQudXNlciA9IGVcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIGlmIChjdXJyUGFnZS5kYXRhLmNob29zZUFkZHJlc3NCYWNrKSB7XG4gICAgICAgICAgcmVzLmRhdGEuZGF0YS51c2VycmVjZWl2ZWxpc3RbMF0udmlsbGFnZV9uYW1lID0gY3VyclBhZ2UuZGF0YS5jaG9vc2VBZGRyZXNzQmFjay5hZGRyZXNzX2RldGFpbFxuICAgICAgICAgIHJlcy5kYXRhLmRhdGEudXNlcnJlY2VpdmVsaXN0WzBdLmRvb3JfbnVtYmVyID0gY3VyclBhZ2UuZGF0YS5jaG9vc2VBZGRyZXNzQmFjay5kb29yX251bWJlclxuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJyUGFnZS5kYXRhLmNob29zZUxpbmtCYWNrKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2MnLGN1cnJQYWdlLmRhdGEuY2hvb3NlTGlua0JhY2spXG4gICAgICAgICAgdGhhdC51c2VyID0gY3VyclBhZ2UuZGF0YS5jaG9vc2VMaW5rQmFja1xuICAgICAgICB9XG4gICAgICAgIHRoYXQubGlzdCA9IHJlcy5kYXRhLmRhdGFcbiAgICAgICAgdGhhdC4kYXBwbHkoKVxuICAgICAgfSlcbiAgICB9XG5cbiAgICBtZXRob2RzID0ge1xuICAgICAgY29tbWl0ICh1c2VySWQsIHJlY2VpdmVJZCwgbGlua0lkLCBwcm9qZWN0SWQpIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzXG4gICAgICAgIGxldCBpZCA9IHdlcHkuZ2V0U3RvcmFnZVN5bmMoJ2FjdGl2aXR5X3Byb2plY3RfaWQnKVxuICAgICAgICB0aGF0LmNvbW1pdFN1Yih1c2VySWQsIHJlY2VpdmVJZCwgbGlua0lkLCBpZCkudGhlbihyZXMgPT4ge1xuICAgICAgICAgIGlmIChyZXMuZGF0YS5yZXN1bHRDb2RlID09PSAxMDAwKSB7XG4gICAgICAgICAgICB0aGF0LiRuYXZpZ2F0ZSgnLi9wYXknLCB7aWQ6IHJlcy5kYXRhLmRhdGEsIHByaWNlOiB0aGF0Lmxpc3QucHJvamVjdGluZm8uc29fcHJpY2V9KVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGF0LnNlbGZUb2FzdChyZXMuZGF0YS5lcnJvciwgJ25vbmUnKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0sXG5cbiAgICAgIC8vIOS/ruaUueiBlOezu+S6ulxuICAgICAgZWRpdFRlbCAoaWQpIHtcbiAgICAgICAgdGhpcy4kbmF2aWdhdGUoJy4vY29udGFjdExpc3QnLCB7J3VzZXJfaWQnOiBpZH0pXG4gICAgICB9LFxuICAgICAgLy8g5Y676YCJ5oup6IGU57O75Lq6XG4gICAgICB0b0FkZHJlc3MgKGlkKSB7XG4gICAgICAgIHRoaXMuJG5hdmlnYXRlKCcuL2FkZHJlc3MnLCB7J3VzZXJfaWQnOiBpZH0pXG4gICAgICB9XG4gICAgfVxuICB9XG4iXX0=