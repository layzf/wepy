'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

var _toast = require('./../mixins/toast.js');

var _toast2 = _interopRequireDefault(_toast);

var _api = require('./../mixins/api.js');

var _api2 = _interopRequireDefault(_api);

var _util = require('./../mixins/util.js');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var item = function (_wepy$component) {
  _inherits(item, _wepy$component);

  function item() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, item);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = item.__proto__ || Object.getPrototypeOf(item)).call.apply(_ref, [this].concat(args))), _this), _this.props = {
      listData: {
        type: Object,
        value: {}
      },
      options: {
        type: Object,
        value: {}
      }
    }, _this.mixins = [_api2.default, _toast2.default, _util2.default], _this.data = {
      showRemark: false,
      remarkData: '',
      phone: 0,
      height: wx.getSystemInfoSync().windowHeight,
      index: ''
    }, _this.methods = {
      reVisit: function reVisit() {
        var mobile = this.listData.mobile;
        wx.makePhoneCall({
          phoneNumber: mobile // 仅为示例，并非真实的电话号码
        });
      },
      reMark: function reMark(e) {
        console.log(e);
        if (this.listData.return_visit > 0) {
          var remark = this.listData.remark;
          wx.showModal({
            title: '备注',
            content: remark,
            showCancel: false,
            success: function success(res) {
              if (res.confirm) {
                console.log('用户点击确定');
              }
            }
          });
        } else {
          this.index = e.currentTarget.dataset.comIndex;
          this.showRemark = true;
          this.phone = e.currentTarget.dataset.phone;
          this.$apply();
        }
      },
      modalConfirm: function modalConfirm(e) {
        console.log('that', this.$data.listData);
        var that = this;
        var rdata = this.remarkData;
        var options = this.options;
        var data = {
          mobile: this.phone,
          base_id: options.base_id,
          riding_id: options.riding_id,
          remark: rdata
        };
        this.setRemarkData(data).then(function (res) {
          if (res.data.resultCode === 1000) {
            that.selfToast('添加备注成功');
            that.showRemark = false;
            that.$emit('changeState', { index: that.index, remark: rdata });
            that.$apply();
          }
        });
      },
      modalCancel: function modalCancel() {
        this.showRemark = false;
        this.remarkData = '';
        this.$apply();
      },
      getData: function getData(e) {
        var data = e.detail.value;
        this.remarkData = data;
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(item, [{
    key: 'onLoad',
    value: function onLoad() {
      console.log('props', this.listData);
    }
  }]);

  return item;
}(_wepy2.default.component);

exports.default = item;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZW0uanMiXSwibmFtZXMiOlsiaXRlbSIsInByb3BzIiwibGlzdERhdGEiLCJ0eXBlIiwiT2JqZWN0IiwidmFsdWUiLCJvcHRpb25zIiwibWl4aW5zIiwiYXBpIiwidG9hc3RNaXhpbiIsInV0aWwiLCJkYXRhIiwic2hvd1JlbWFyayIsInJlbWFya0RhdGEiLCJwaG9uZSIsImhlaWdodCIsInd4IiwiZ2V0U3lzdGVtSW5mb1N5bmMiLCJ3aW5kb3dIZWlnaHQiLCJpbmRleCIsIm1ldGhvZHMiLCJyZVZpc2l0IiwibW9iaWxlIiwibWFrZVBob25lQ2FsbCIsInBob25lTnVtYmVyIiwicmVNYXJrIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJyZXR1cm5fdmlzaXQiLCJyZW1hcmsiLCJzaG93TW9kYWwiLCJ0aXRsZSIsImNvbnRlbnQiLCJzaG93Q2FuY2VsIiwic3VjY2VzcyIsInJlcyIsImNvbmZpcm0iLCJjdXJyZW50VGFyZ2V0IiwiZGF0YXNldCIsImNvbUluZGV4IiwiJGFwcGx5IiwibW9kYWxDb25maXJtIiwiJGRhdGEiLCJ0aGF0IiwicmRhdGEiLCJiYXNlX2lkIiwicmlkaW5nX2lkIiwic2V0UmVtYXJrRGF0YSIsInRoZW4iLCJyZXN1bHRDb2RlIiwic2VsZlRvYXN0IiwiJGVtaXQiLCJtb2RhbENhbmNlbCIsImdldERhdGEiLCJkZXRhaWwiLCJ3ZXB5IiwiY29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDRTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7Ozs7O0lBQ3FCQSxJOzs7Ozs7Ozs7Ozs7OztrTEFDbkJDLEssR0FBUTtBQUNOQyxnQkFBVTtBQUNSQyxjQUFNQyxNQURFO0FBRVJDLGVBQU87QUFGQyxPQURKO0FBS05DLGVBQVM7QUFDUEgsY0FBTUMsTUFEQztBQUVQQyxlQUFPO0FBRkE7QUFMSCxLLFFBV1JFLE0sR0FBUyxDQUFDQyxhQUFELEVBQU1DLGVBQU4sRUFBa0JDLGNBQWxCLEMsUUFFVEMsSSxHQUFPO0FBQ0xDLGtCQUFZLEtBRFA7QUFFTEMsa0JBQVksRUFGUDtBQUdMQyxhQUFPLENBSEY7QUFJTEMsY0FBUUMsR0FBR0MsaUJBQUgsR0FBdUJDLFlBSjFCO0FBS0xDLGFBQU87QUFMRixLLFFBUVBDLE8sR0FBVTtBQUNSQyxhQURRLHFCQUNFO0FBQ1IsWUFBSUMsU0FBUyxLQUFLcEIsUUFBTCxDQUFjb0IsTUFBM0I7QUFDQU4sV0FBR08sYUFBSCxDQUFpQjtBQUNmQyx1QkFBYUYsTUFERSxDQUNLO0FBREwsU0FBakI7QUFHRCxPQU5PO0FBT1JHLFlBUFEsa0JBT0RDLENBUEMsRUFPRTtBQUNSQyxnQkFBUUMsR0FBUixDQUFZRixDQUFaO0FBQ0EsWUFBSSxLQUFLeEIsUUFBTCxDQUFjMkIsWUFBZCxHQUE2QixDQUFqQyxFQUFvQztBQUNsQyxjQUFJQyxTQUFTLEtBQUs1QixRQUFMLENBQWM0QixNQUEzQjtBQUNBZCxhQUFHZSxTQUFILENBQWE7QUFDWEMsbUJBQU8sSUFESTtBQUVYQyxxQkFBU0gsTUFGRTtBQUdYSSx3QkFBWSxLQUhEO0FBSVhDLG1CQUpXLG1CQUlIQyxHQUpHLEVBSUU7QUFDWCxrQkFBSUEsSUFBSUMsT0FBUixFQUFpQjtBQUNmVix3QkFBUUMsR0FBUixDQUFZLFFBQVo7QUFDRDtBQUNGO0FBUlUsV0FBYjtBQVVELFNBWkQsTUFZTztBQUNMLGVBQUtULEtBQUwsR0FBYU8sRUFBRVksYUFBRixDQUFnQkMsT0FBaEIsQ0FBd0JDLFFBQXJDO0FBQ0EsZUFBSzVCLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSxlQUFLRSxLQUFMLEdBQWFZLEVBQUVZLGFBQUYsQ0FBZ0JDLE9BQWhCLENBQXdCekIsS0FBckM7QUFDQSxlQUFLMkIsTUFBTDtBQUNEO0FBQ0YsT0EzQk87QUE0QlJDLGtCQTVCUSx3QkE0QktoQixDQTVCTCxFQTRCUTtBQUNkQyxnQkFBUUMsR0FBUixDQUFZLE1BQVosRUFBb0IsS0FBS2UsS0FBTCxDQUFXekMsUUFBL0I7QUFDQSxZQUFJMEMsT0FBTyxJQUFYO0FBQ0EsWUFBSUMsUUFBUSxLQUFLaEMsVUFBakI7QUFDQSxZQUFJUCxVQUFVLEtBQUtBLE9BQW5CO0FBQ0EsWUFBSUssT0FBTztBQUNUVyxrQkFBUSxLQUFLUixLQURKO0FBRVRnQyxtQkFBU3hDLFFBQVF3QyxPQUZSO0FBR1RDLHFCQUFXekMsUUFBUXlDLFNBSFY7QUFJVGpCLGtCQUFRZTtBQUpDLFNBQVg7QUFNQSxhQUFLRyxhQUFMLENBQW1CckMsSUFBbkIsRUFBeUJzQyxJQUF6QixDQUE4QixlQUFPO0FBQ25DLGNBQUliLElBQUl6QixJQUFKLENBQVN1QyxVQUFULEtBQXdCLElBQTVCLEVBQWtDO0FBQ2hDTixpQkFBS08sU0FBTCxDQUFlLFFBQWY7QUFDQVAsaUJBQUtoQyxVQUFMLEdBQWtCLEtBQWxCO0FBQ0FnQyxpQkFBS1EsS0FBTCxDQUFXLGFBQVgsRUFBMEIsRUFBQ2pDLE9BQU95QixLQUFLekIsS0FBYixFQUFvQlcsUUFBUWUsS0FBNUIsRUFBMUI7QUFDQUQsaUJBQUtILE1BQUw7QUFDRDtBQUNGLFNBUEQ7QUFRRCxPQS9DTztBQWdEUlksaUJBaERRLHlCQWdETTtBQUNaLGFBQUt6QyxVQUFMLEdBQWtCLEtBQWxCO0FBQ0EsYUFBS0MsVUFBTCxHQUFrQixFQUFsQjtBQUNBLGFBQUs0QixNQUFMO0FBQ0QsT0FwRE87QUFxRFJhLGFBckRRLG1CQXFEQTVCLENBckRBLEVBcURHO0FBQ1QsWUFBSWYsT0FBT2UsRUFBRTZCLE1BQUYsQ0FBU2xELEtBQXBCO0FBQ0EsYUFBS1EsVUFBTCxHQUFrQkYsSUFBbEI7QUFDRDtBQXhETyxLOzs7Ozs2QkEyREQ7QUFDUGdCLGNBQVFDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCLEtBQUsxQixRQUExQjtBQUNEOzs7O0VBbkYrQnNELGVBQUtDLFM7O2tCQUFsQnpELEkiLCJmaWxlIjoiaXRlbS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICBpbXBvcnQgd2VweSBmcm9tICd3ZXB5J1xuICBpbXBvcnQgdG9hc3RNaXhpbiBmcm9tICcuLi9taXhpbnMvdG9hc3QnXG4gIGltcG9ydCBhcGkgZnJvbSAnLi4vbWl4aW5zL2FwaSdcbiAgaW1wb3J0IHV0aWwgZnJvbSAnLi4vbWl4aW5zL3V0aWwnXG4gIGV4cG9ydCBkZWZhdWx0IGNsYXNzIGl0ZW0gZXh0ZW5kcyB3ZXB5LmNvbXBvbmVudCB7XG4gICAgcHJvcHMgPSB7XG4gICAgICBsaXN0RGF0YToge1xuICAgICAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgIHZhbHVlOiB7fVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICB2YWx1ZToge31cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtaXhpbnMgPSBbYXBpLCB0b2FzdE1peGluLCB1dGlsXVxuXG4gICAgZGF0YSA9IHtcbiAgICAgIHNob3dSZW1hcms6IGZhbHNlLFxuICAgICAgcmVtYXJrRGF0YTogJycsXG4gICAgICBwaG9uZTogMCxcbiAgICAgIGhlaWdodDogd3guZ2V0U3lzdGVtSW5mb1N5bmMoKS53aW5kb3dIZWlnaHQsXG4gICAgICBpbmRleDogJydcbiAgICB9XG5cbiAgICBtZXRob2RzID0ge1xuICAgICAgcmVWaXNpdCgpIHtcbiAgICAgICAgbGV0IG1vYmlsZSA9IHRoaXMubGlzdERhdGEubW9iaWxlXG4gICAgICAgIHd4Lm1ha2VQaG9uZUNhbGwoe1xuICAgICAgICAgIHBob25lTnVtYmVyOiBtb2JpbGUgLy8g5LuF5Li656S65L6L77yM5bm26Z2e55yf5a6e55qE55S16K+d5Y+356CBXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgcmVNYXJrKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coZSlcbiAgICAgICAgaWYgKHRoaXMubGlzdERhdGEucmV0dXJuX3Zpc2l0ID4gMCkge1xuICAgICAgICAgIGxldCByZW1hcmsgPSB0aGlzLmxpc3REYXRhLnJlbWFya1xuICAgICAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgICAgICB0aXRsZTogJ+Wkh+azqCcsXG4gICAgICAgICAgICBjb250ZW50OiByZW1hcmssXG4gICAgICAgICAgICBzaG93Q2FuY2VsOiBmYWxzZSxcbiAgICAgICAgICAgIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgICAgIGlmIChyZXMuY29uZmlybSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnlKjmiLfngrnlh7vnoa7lrponKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmluZGV4ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuY29tSW5kZXhcbiAgICAgICAgICB0aGlzLnNob3dSZW1hcmsgPSB0cnVlXG4gICAgICAgICAgdGhpcy5waG9uZSA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0LnBob25lXG4gICAgICAgICAgdGhpcy4kYXBwbHkoKVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgbW9kYWxDb25maXJtKGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3RoYXQnLCB0aGlzLiRkYXRhLmxpc3REYXRhKVxuICAgICAgICBsZXQgdGhhdCA9IHRoaXNcbiAgICAgICAgbGV0IHJkYXRhID0gdGhpcy5yZW1hcmtEYXRhXG4gICAgICAgIGxldCBvcHRpb25zID0gdGhpcy5vcHRpb25zXG4gICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgIG1vYmlsZTogdGhpcy5waG9uZSxcbiAgICAgICAgICBiYXNlX2lkOiBvcHRpb25zLmJhc2VfaWQsXG4gICAgICAgICAgcmlkaW5nX2lkOiBvcHRpb25zLnJpZGluZ19pZCxcbiAgICAgICAgICByZW1hcms6IHJkYXRhXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRSZW1hcmtEYXRhKGRhdGEpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICBpZiAocmVzLmRhdGEucmVzdWx0Q29kZSA9PT0gMTAwMCkge1xuICAgICAgICAgICAgdGhhdC5zZWxmVG9hc3QoJ+a3u+WKoOWkh+azqOaIkOWKnycpXG4gICAgICAgICAgICB0aGF0LnNob3dSZW1hcmsgPSBmYWxzZVxuICAgICAgICAgICAgdGhhdC4kZW1pdCgnY2hhbmdlU3RhdGUnLCB7aW5kZXg6IHRoYXQuaW5kZXgsIHJlbWFyazogcmRhdGF9KVxuICAgICAgICAgICAgdGhhdC4kYXBwbHkoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0sXG4gICAgICBtb2RhbENhbmNlbCgpIHtcbiAgICAgICAgdGhpcy5zaG93UmVtYXJrID0gZmFsc2VcbiAgICAgICAgdGhpcy5yZW1hcmtEYXRhID0gJydcbiAgICAgICAgdGhpcy4kYXBwbHkoKVxuICAgICAgfSxcbiAgICAgIGdldERhdGEoZSkge1xuICAgICAgICBsZXQgZGF0YSA9IGUuZGV0YWlsLnZhbHVlXG4gICAgICAgIHRoaXMucmVtYXJrRGF0YSA9IGRhdGFcbiAgICAgIH1cbiAgICB9XG5cbiAgICBvbkxvYWQoKSB7XG4gICAgICBjb25zb2xlLmxvZygncHJvcHMnLCB0aGlzLmxpc3REYXRhKVxuICAgIH1cbiAgfVxuIl19